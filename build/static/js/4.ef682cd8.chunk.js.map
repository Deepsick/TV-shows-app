{"version":3,"sources":["config/keys.js","config/trakt-api-config.js","config/TMDB-config.js","store/actions/posterActions.js","store/actions/searchActions.js","components/common/SearchField/SearchField.js","components/common/Spinner/Spinner.js","../node_modules/classnames/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","store/actions/showsActions.js","components/Pagination/PaginationItem/PaginationItem.js","components/Pagination/ItemsForm/ItemsForm.js","components/Pagination/Pagination.js","components/Filters/Filters.js","components/Table/TableHeader/TableHeader.js","components/Table/ShowsList/Show/Show.js","components/Table/ShowsList/ShowsList.js","components/Table/Table.js","containers/Sorting/Sorting.js","store/actions/paginationActions.js","store/actions/sortActions.js"],"names":["__webpack_require__","d","__webpack_exports__","apiKeyTMDB","traktApiKey","traktConfig","baseUrl","searchUrl","_keys__WEBPACK_IMPORTED_MODULE_0__","method","headers","Headers","Content-Type","trakt-api-key","trakt-api-version","idPosterConfig","posterConfig","posterActions_fetchPosters","fetchPosters","shows","successCallback","dispatch","posterPromises","map","show","posterUrl","concat","ids","tmdb","fetch","then","response","json","Promise","all","resArray","showsWithPosters","index","posters","length","filePath","file_path","getPosterUrl","poster","catch","err","type","GET_ERRORS","errors","setSearchQuery","searchShows","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","_posterActions__WEBPACK_IMPORTED_MODULE_1__","_config_trakt_api_config__WEBPACK_IMPORTED_MODULE_2__","query","SET_SEARCH_QUERY","searchShowsStart","SEARCH_SHOWS_START","searchShowsSuccess","result","SEARCH_SHOWS_SUCCESS","res","showArray","SEARCH_SHOWS_FAILED","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","searchField","props","a","createElement","className","onSubmit","evt","preventDefault","autoFocus","id","placeholder","value","onChange","onChangeHandler","htmlFor","spinner","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","_objectWithoutProperties","source","excluded","target","Object","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","fetchShowsSuccess","FETCH_SHOWS_SUCCESS","paginationItem","react_default","react_router_dom","classnames","Pagination__link--active","page","currentPage","to","onClick","itemsForm","onChangeNadler","name","pagination","lastPage","_props$pagination","amountOfPages","linksAmount","amountOfPaginationLinks","ItemsForm","Fragment","Pagination__link--disabled","onClickHandler","fill","number","PaginationItem","reverse","filters","currentYear","Date","getFullYear","onFilterChangeHadnler","values","category","ratings","years","item","status","genres","tableHeader","description","overview","slice","href","trailer","rel","src","alt","title","width","height","aired_episodes","rating","toFixed","year","showsList","showList","Show","style","position","left","paddingTop","fontSize","table","TableHeader","ShowsList","Sorting","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","_key","possibleConstructorReturn","getPrototypeOf","onFilterChangeHandler","_evt$target","setCurrentPage","setSortingFilters","decodeURIComponent","onPaginationSelectChangeHandler","setCurrentLimit","onSearchInputChangeHandler","search","history","onPageClickHandler","inherits","createClass","queryStringArray","location","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","queryParameter","replace","encodeURIComponent","return","_this$props$paginatio","limit","itemsPerPage","_this$props$sorting","sorting","showType","fetchShows","nextProps","_nextProps$pagination","_nextProps$sorting","filtersString","_i","_Object$keys","keys","filter","_i2","_Object$keys2","_this$props$shows","loading","content","Filters","SearchField","Pagination","Table","Spinner","Component","connect","state","FETCH_SHOWS_START","sortUrl","pagesAmount","entries","header","GET_AMOUNT_OF_PAGES","from","FETCH_SHOWS_FAILED","SET_CURRENT_PAGE","SET_CURRENT_LIMIT","SET_SORTING_FILTERS"],"mappings":"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","file":"static/js/4.ef682cd8.chunk.js","sourcesContent":["export const apiKeyTMDB = \"292dfb087089a0d1e06fb7645766b94b\";\nexport const traktApiKey =\n  \"a158772b33a2b5a08074d228e73c04e1e0967525fea9db31504a8df87902623a\";\n","import { traktApiKey } from \"./keys\";\n\nconst headers = new Headers({\n  \"Content-Type\": \"application/json\",\n  \"trakt-api-key\": traktApiKey,\n  \"trakt-api-version\": \"2\"\n});\n\nexport const traktConfig = {\n  method: \"GET\",\n  headers\n};\n\nexport const baseUrl = \"https://api.trakt.tv/shows/\";\nexport const searchUrl = \"https://api.trakt.tv/search/show?query=\";\n","import { apiKeyTMDB } from \"./keys\";\n\n// config for poster id\nexport const idPosterConfig = {\n  apiKeyTMDB,\n  baseUrl: \"https://api.themoviedb.org/3/tv/\"\n};\n\n// config for poster url\nexport const posterConfig = {\n  baseUrl: \"https://image.tmdb.org/t/p/\",\n  posterSize: \"original\"\n};\n","import { GET_ERRORS } from \"./actionTypes\";\nimport { idPosterConfig, posterConfig } from \"../../config/TMDB-config\";\n\nexport const fetchPosters = (shows, successCallback) => {\n  return dispatch => {\n    // Create array of Promises to fetch posters\n    const posterPromises = shows.map(show => {\n      //create url with poster id\n      let posterUrl = `${idPosterConfig.baseUrl}${show.ids.tmdb ||\n        1}/images?api_key=${idPosterConfig.apiKeyTMDB}`;\n      return fetch(posterUrl).then(response => response.json());\n    });\n    Promise.all(posterPromises)\n      .then(resArray => {\n        // Add poster property to show object\n        const showsWithPosters = shows.map((show, index) => {\n          if (resArray[index].posters && resArray[index].posters.length !== 0) {\n            const filePath = resArray[index].posters[0].file_path;\n            // Create url with poster\n            const getPosterUrl = `${posterConfig.baseUrl}${\n              posterConfig.posterSize\n            }/${filePath}`;\n            show.poster = getPosterUrl;\n          }\n          return show;\n        });\n        dispatch(successCallback(showsWithPosters));\n      })\n      .catch(err => {\n        dispatch({\n          type: GET_ERRORS,\n          errors: `Can not get posters from TMDB api`\n        });\n      });\n  };\n};\n","import {\n  SET_SEARCH_QUERY,\n  SEARCH_SHOWS_START,\n  SEARCH_SHOWS_FAILED,\n  SEARCH_SHOWS_SUCCESS,\n  GET_ERRORS\n} from \"./actionTypes\";\n\nimport { fetchPosters } from \"./posterActions\";\n\nimport { traktConfig, searchUrl } from \"../../config/trakt-api-config\";\n\nexport const setSearchQuery = query => {\n  return {\n    type: SET_SEARCH_QUERY,\n    query\n  };\n};\n\nexport const searchShowsStart = () => {\n  return {\n    type: SEARCH_SHOWS_START\n  };\n};\n\nconst searchShowsSuccess = result => {\n  return {\n    type: SEARCH_SHOWS_SUCCESS,\n    result\n  };\n};\n\nconst searchShowsFailed = () => {\n  return {\n    type: SEARCH_SHOWS_FAILED\n  };\n};\n\nexport const searchShows = query => dispatch => {\n  dispatch(searchShowsStart);\n  fetch(`${searchUrl}${query}`, traktConfig)\n    .then(res => res.json())\n    .then(showArray => {\n      showArray = showArray.map(show => show.show);\n      dispatch(fetchPosters(showArray, searchShowsSuccess));\n    })\n    .catch(err => {\n      dispatch(searchShowsFailed());\n      dispatch({\n        type: GET_ERRORS,\n        errors: \"Can not find anything\"\n      });\n    });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst searchField = props => (\n  <form className=\"SearchField\" onSubmit={evt => evt.preventDefault()}>\n    <input\n      autoFocus\n      className=\"SearchField__input\"\n      type=\"search\"\n      id=\"search-input\"\n      placeholder=\"Search show\"\n      value={props.value}\n      onChange={props.onChangeHandler}\n    />\n    <label htmlFor=\"search-input\">\n      <span className=\"visually-hidden\">Search</span>\n    </label>\n  </form>\n);\n\nsearchField.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeHandler: PropTypes.func.isRequired\n};\n\nexport default searchField;\n","import React from \"react\";\n\nconst spinner = () => (\n  <div className=\"Spinner\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default spinner;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { traktConfig, baseUrl } from \"../../config/trakt-api-config\";\nimport {\n  FETCH_SHOWS_START,\n  FETCH_SHOWS_SUCCESS,\n  FETCH_SHOWS_FAILED,\n  GET_ERRORS\n} from \"./actionTypes\";\n\nimport { fetchPosters } from \"./posterActions\";\n\nimport { getAmountOfPages } from \"./paginationActions\";\n\nconst fetchShowsStart = () => {\n  return {\n    type: FETCH_SHOWS_START\n  };\n};\n\nconst fetchShowsSuccess = shows => {\n  return {\n    type: FETCH_SHOWS_SUCCESS,\n    shows\n  };\n};\n\nconst fetchShowsFailed = () => {\n  return {\n    type: FETCH_SHOWS_FAILED\n  };\n};\n\nexport const fetchShows = (page, limit, showType, filters) => {\n  return dispatch => {\n    // Changes loading property to True and shows Spinner during loading process\n    dispatch(fetchShowsStart());\n\n    // Retrieves tv shows with pagination and filters. Also gets shows id.\n    let filtersString = Object.keys(filters)\n      .map(filter => `${filter}=${filters[filter]}`)\n      .join(\"&\");\n    if (filtersString.length > 0) {\n      filtersString = \"&\" + filtersString;\n    }\n    const sortUrl = `${baseUrl}${showType}?extended=full&page=${page}&limit=${limit}${filtersString}`; \n    fetch(sortUrl, traktConfig)\n      .then(res => {\n        for (let header of res.headers.entries()) {\n          if (header[0] === \"x-pagination-page-count\") {\n            const amountOfPages = header[1];\n            dispatch(getAmountOfPages(amountOfPages));\n          }\n        }\n        return res.json();\n      })\n      .then(res => {\n        if (showType === \"trending\" || showType === \"anticipated\") {\n          res = Array.from(res).map(show => show.show);\n        }\n        dispatch(fetchPosters(res, fetchShowsSuccess));\n      })\n      .catch(err => {\n        dispatch(fetchShowsFailed());\n        dispatch({\n          type: GET_ERRORS,\n          errors: \"Can not get shows from track api\"\n        });\n      });\n  };\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst paginationItem = props => (\n  <li className=\"Pagination__item\">\n    <Link\n      className={classnames(\"Pagination__link\", {\n        \"Pagination__link--active\": props.page === props.currentPage\n      })}\n      to={props.page !== 1 ? \"/?page=\" + props.page : \"/\"}\n      onClick={() => props.onClick(props.page)}\n    >\n      {props.page}\n    </Link>\n  </li>\n);\n\npaginationItem.propTypes = {\n  page: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default paginationItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst itemsForm = props => (\n  <form className=\"ItemsForm\">\n    <ul className=\"ItemsForm__list\">\n      <li className=\"select-group  ItemsForm__item\">\n        <label className=\"ItemsForm__label\" htmlFor=\"limit\">\n          Shows per page\n        </label>\n        <select\n          onChange={props.onChangeNadler}\n          className=\"select-group__select  ItemsForm__select\"\n          id=\"limit\"\n          name=\"limit\"\n          value={props.value}\n        >\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </li>\n    </ul>\n  </form>\n);\n\nitemsForm.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChangeNadler: PropTypes.func.isRequired\n};\n\nexport default itemsForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport PaginationItem from \"./PaginationItem/PaginationItem\";\nimport ItemsForm from \"./ItemsForm/ItemsForm\";\n\nconst pagination = props => {\n  let {\n    amountOfPages,\n    page: currentPage,\n    amountOfPaginationLinks: linksAmount\n  } = props.pagination;\n\n  let lastPage;\n  if (currentPage < 3) {\n    lastPage = currentPage + linksAmount;\n  }\n  if (currentPage > amountOfPages - 2) {\n    lastPage = amountOfPages + 1;\n  }\n  if (currentPage >= 3 && currentPage <= amountOfPages - 2) {\n    lastPage = currentPage + 3;\n  }\n  if (lastPage > amountOfPages) {\n    lastPage = amountOfPages + 1;\n  }\n\n  let pagination = (\n    <ul className=\"Pagination\">\n      <li className=\"Pagination__item  Pagination__item--form\">\n        <ItemsForm value={props.value} onChangeNadler={props.onChangeNadler} />\n      </li>\n      {amountOfPages > 1 ? (\n        <React.Fragment>\n          <li className=\"Pagination__item\">\n            <Link\n              className={classnames(\n                \"Pagination__link  Pagination__link--nav  Pagination__link--start\",\n                {\n                  \"Pagination__link--disabled\": currentPage === 1\n                }\n              )}\n              to=\"/?page=1\"\n              onClick={() => props.onClickHandler(1)}\n            >\n              <span className=\"visually-hidden\">To the beginning</span>\n            </Link>\n          </li>\n          <li className=\"Pagination__item\">\n            <Link\n              className={classnames(\n                \"Pagination__link  Pagination__link--nav  Pagination__link--previous\",\n                {\n                  \"Pagination__link--disabled\": currentPage === 1\n                }\n              )}\n              to={\"/?page=\" + (currentPage - 1)}\n              onClick={() => props.onClickHandler(currentPage - 1)}\n            >\n              <span className=\"visually-hidden\"> Previous page</span>\n            </Link>\n          </li>\n          {new Array(linksAmount)\n            .fill(0)\n            .map(number => {\n              lastPage--;\n              if (lastPage > 0) {\n                return (\n                  <PaginationItem\n                    key={lastPage}\n                    page={lastPage}\n                    currentPage={currentPage}\n                    onClick={props.onClickHandler}\n                  />\n                );\n              }\n              return \"\";\n            })\n            .reverse()}\n          <li className=\"Pagination__item\">\n            <Link\n              className={classnames(\n                \"Pagination__link  Pagination__link--nav  Pagination__link--next\",\n                {\n                  \"Pagination__link--disabled\": currentPage === amountOfPages\n                }\n              )}\n              to={\"/?page=\" + (currentPage + 1)}\n              onClick={() => props.onClickHandler(currentPage + 1)}\n            >\n              <span className=\"visually-hidden\"> Next page</span>\n            </Link>\n          </li>\n          <li className=\"Pagination__item\">\n            <Link\n              className={classnames(\n                \"Pagination__link  Pagination__link--nav  Pagination__link--end\",\n                {\n                  \"Pagination__link--disabled\": currentPage === amountOfPages\n                }\n              )}\n              to={\"/?page=\" + amountOfPages}\n              onClick={() => props.onClickHandler(amountOfPages)}\n            >\n              <span className=\"visually-hidden\">To the end</span>\n            </Link>\n          </li>\n        </React.Fragment>\n      ) : (\n        \"\"\n      )}\n    </ul>\n  );\n\n  return <React.Fragment>{pagination}</React.Fragment>;\n};\n\npagination.propTypes = {\n  pagination: PropTypes.object.isRequired,\n  value: PropTypes.number.isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  onChangeNadler: PropTypes.func.isRequired\n};\n\nexport default pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst filters = props => {\n  let currentYear = new Date().getFullYear() + 1;\n  return (\n    <form className=\"Filters\">\n      <ul className=\"Filters__list\">\n        <li className=\"select-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select\n            className=\"select-group__select\"\n            id=\"category\"\n            name=\"category\"\n            onChange={props.onFilterChangeHadnler}\n            value={props.values.category}\n          >\n            <option value=\"trending\">trending</option>\n            <option value=\"popular\">popular</option>\n            <option value=\"anticipated\">anticipated</option>\n          </select>\n        </li>\n        <li className=\"select-group\">\n          <label htmlFor=\"ratings\">Ratings</label>\n          <select\n            className=\"select-group__select\"\n            id=\"ratings\"\n            name=\"ratings\"\n            onChange={props.onFilterChangeHadnler}\n            value={props.values.ratings}\n          >\n            <option value=\"0-100\">all</option>\n            <option value=\"75-100\">7.5 - 10</option>\n            <option value=\"50-74\">5- 7.4</option>\n            <option value=\"0-50\">less than 5</option>\n          </select>\n        </li>\n        <li className=\"select-group\">\n          <label htmlFor=\"years\">Year</label>\n          <select\n            className=\"select-group__select\"\n            id=\"years\"\n            name=\"years\"\n            onChange={props.onFilterChangeHadnler}\n            value={props.values.years}\n          >\n            <option value=\"\">all</option>\n            {new Array(10).fill(0).map((item, index) => {\n              item = --currentYear;\n              return (\n                <option key={index} value={item}>\n                  {item}\n                </option>\n              );\n            })}\n          </select>\n        </li>\n        <li className=\"select-group\">\n          <label htmlFor=\"status\">Status</label>\n          <select\n            className=\"select-group__select\"\n            id=\"status\"\n            name=\"status\"\n            onChange={props.onFilterChangeHadnler}\n            value={props.values.status}\n          >\n            <option value=\"\">all</option>\n            <option value=\"returning series\">returning series</option>\n            <option value=\"ended\">ended</option>\n          </select>\n        </li>\n        <li className=\"select-group\">\n          <label htmlFor=\"genres\">Genres</label>\n          <select\n            className=\"select-group__select\"\n            id=\"genres\"\n            name=\"genres\"\n            onChange={props.onFilterChangeHadnler}\n            value={props.values.genres}\n          >\n            <option value=\"\">all</option>\n            <option value=\"action\">action</option>\n            <option value=\"adventure\">adventure</option>\n            <option value=\"animation\">animation</option>\n            <option value=\"anime\">anime</option>\n            <option value=\"crime\">crime</option>\n            <option value=\"comedy\">comedy</option>\n            <option value=\"documentary\">documentary</option>\n            <option value=\"drama\">drama</option>\n            <option value=\"family\">family</option>\n            <option value=\"fantasy\">fantasy</option>\n            <option value=\"history\">history</option>\n            <option value=\"horror\">horror</option>\n            <option value=\"musical\">musical</option>\n            <option value=\"mystery\">mystery</option>\n            <option value=\"romance\">romance</option>\n            <option value=\"sports\">sports</option>\n            <option value=\"thriller\">thriller</option>\n            <option value=\"war\">war</option>\n          </select>\n        </li>\n      </ul>\n    </form>\n  );\n};\n\nfilters.propTypes = {\n  values: PropTypes.object.isRequired,\n  onFilterChangeHadnler: PropTypes.func.isRequired\n};\n\nexport default filters;\n","import React from \"react\";\n\nconst tableHeader = () => (\n  <thead>\n    <tr className=\"Table__tr\">\n      <th className=\"Table__th  Table__th--number\">Number</th>\n      <th className=\"Table__th  Table__th--poster\">Poster</th>\n      <th className=\"Table__th  Table__th--title\">Title</th>\n      <th className=\"Table__th  Table__th--description\">Description</th>\n      <th className=\"Table__th\">episodes</th>\n      <th className=\"Table__th\">Rating</th>\n      <th className=\"Table__th\">Year</th>\n      <th className=\"Table__th  Table__th--genres\">Genres</th>\n      <th className=\"Table__th Table__th--status\">Status</th>\n    </tr>\n  </thead>\n);\n\nexport default tableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst show = props => {\n  const { show, number } = props;\n  const defaultPoster =\n    \"https://st.kp.yandex.net/images/movies/poster_none.png\";\n\n  const description = show.overview\n    ? show.overview.length >= 100\n      ? show.overview.slice(0, 100) + \"...\"\n      : show.overview\n    : \"There is no description for this show\";\n\n  return (\n    <tr className=\"Table__tr\">\n      <td className=\"Table__td  Table__td--number\">{number}</td>\n      <td className=\"Table__td\">\n        <a href={show.trailer} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img\n            src={show.poster && show.ids.tmdb ? show.poster : defaultPoster}\n            alt={show.title}\n            width=\"200\"\n            height=\"200\"\n          />\n        </a>\n      </td>\n      <td className=\"Table__td\">{show.title}</td>\n      <td className=\"Table__td  Table__td--description\">{description}</td>\n      <td className=\"Table__td  Table__td--episodes\">{show.aired_episodes}</td>\n      <td className=\"Table__td  Table__td--rating\">\n        {show.rating === 0\n          ? \"not rated yet\"\n          : show.rating\n          ? show.rating.toFixed(2)\n          : \"\"}\n      </td>\n      <td className=\"Table__td\">{show.year}</td>\n      <td className=\"Table__td  Table__td--genres\">\n        {show.genres ? show.genres.join(\", \") : \"\"}\n      </td>\n      <td className=\"Table__td  Table__td--status\">{show.status}</td>\n    </tr>\n  );\n};\n\nshow.propTypes = {\n  number: PropTypes.number.isRequired,\n  show: PropTypes.object.isRequired\n};\n\nexport default show;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Show from \"./Show/Show\";\n\nconst showsList = props => {\n  let showList = (\n    <React.Fragment>\n      {props.shows.map((show, index) => (\n        <Show key={index} number={index + 1} show={show} />\n      ))}\n    </React.Fragment>\n  );\n\n  if (props.shows.length === 0) {\n    showList = (\n      <tr>\n        <td>\n          <p\n            style={{\n              position: \"relative\",\n              left: \"500px\",\n              width: \"300px\",\n              paddingTop: \"20px\",\n              fontSize: \"16px\"\n            }}\n          >\n            No matches were found\n          </p>\n        </td>\n      </tr>\n    );\n  }\n\n  return <React.Fragment>{showList}</React.Fragment>;\n};\n\nshowsList.propTypes = {\n  shows: PropTypes.array.isRequired\n};\n\nexport default showsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport ShowsList from \"./ShowsList/ShowsList\";\n\nconst table = props => (\n  <table className=\"Table\">\n    <TableHeader />\n    <tbody>\n      <ShowsList shows={props.shows} />\n    </tbody>\n  </table>\n);\n\ntable.propTypes = {\n  shows: PropTypes.array\n};\n\nexport default table;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { fetchShows } from \"../../store/actions/showsActions\";\nimport {\n  setCurrentPage,\n  setCurrentLimit\n} from \"../../store/actions/paginationActions\";\nimport { setSortingFilters } from \"../../store/actions/sortActions\";\nimport { setSearchQuery } from \"../../store/actions/searchActions\";\n\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport Filters from \"../../components/Filters/Filters\";\nimport Table from \"../../components/Table/Table\";\nimport SearchField from \"../../components/common/SearchField/SearchField\";\nimport Spinner from \"../../components/common/Spinner/Spinner\";\nexport class Sorting extends Component {\n  componentDidMount() {\n    this.props.setSearchQuery(\"\");\n\n    let queryStringArray = this.props.location.search.split(\"&\");\n\n    if (queryStringArray.length !== 1) {\n      for (let param of queryStringArray) {\n        let queryParameter = param.replace(\"?\", \"\").split(\"=\");\n\n        if (queryParameter[0] === \"page\") {\n          this.props.setCurrentPage(encodeURIComponent(queryParameter[1]));\n        } else if (queryParameter[0] === \"limit\") {\n          this.props.setCurrentLimit(encodeURIComponent(queryParameter[1]));\n        } else if (queryParameter[0] === \"category\") {\n          this.props.setSortingFilters(\n            queryParameter[0],\n            encodeURIComponent(queryParameter[1])\n          );\n        } else {\n          this.props.setSortingFilters(\n            queryParameter[0],\n            decodeURIComponent(queryParameter[1])\n          );\n        }\n      }\n    } else {\n      const { page, itemsPerPage: limit } = this.props.pagination;\n      const { category: showType, ...filters } = this.props.sorting;\n      this.props.fetchShows(page, limit, showType, filters);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let { page, itemsPerPage: limit, amountOfPages } = nextProps.pagination;\n    const { category: showType, ...filters } = nextProps.sorting;\n    if (\n      limit !== this.props.pagination.itemsPerPage ||\n      page !== this.props.pagination.page ||\n      showType !== this.props.sorting.category ||\n      filters.years !== this.props.sorting.years ||\n      filters.ratings !== this.props.sorting.ratings ||\n      filters.status !== this.props.sorting.status ||\n      filters.genres !== this.props.sorting.genres\n    ) {\n      let filtersString = \"\";\n      for (let filter of Object.keys(filters)) {\n        filtersString += `&${filter}=${filters[filter]}`;\n      }\n      this.props.history.replace(\n        `/?page=${page}&limit=${limit}&category=${showType}${filtersString}`\n      );\n      this.props.fetchShows(page, limit, showType, filters);\n    }\n    if (amountOfPages && amountOfPages < page) {\n      this.props.setCurrentPage(amountOfPages);\n      let filtersString = \"\";\n      for (let filter of Object.keys(filters)) {\n        filtersString += `&${filter}=${filters[filter]}`;\n      }\n      this.props.history.replace(\n        `/?page=${amountOfPages}&limit=${limit}&category=${showType}${filtersString}`\n      );\n    }\n  }\n\n  onFilterChangeHandler = evt => {\n    evt.preventDefault();\n    const { name, value } = evt.target;\n    this.props.setCurrentPage(1);\n    this.props.setSortingFilters(name, decodeURIComponent(value));\n  };\n\n  onPaginationSelectChangeHandler = evt => {\n    evt.preventDefault();\n    const { value } = evt.target;\n    this.props.setCurrentLimit(value);\n  };\n\n  onSearchInputChangeHandler = evt => {\n    evt.preventDefault();\n    const search = evt.target.value;\n    this.props.setSearchQuery(search);\n    this.props.history.push(`/search?query=${search}`);\n  };\n\n  onPageClickHandler = page => {\n    this.props.setCurrentPage(page);\n  };\n\n  render() {\n    const { shows, loading } = this.props.shows;\n    let content = (\n      <React.Fragment>\n        <Filters\n          onFilterChangeHadnler={this.onFilterChangeHandler}\n          values={this.props.sorting}\n        />\n        <div className=\"flex-wrapper\">\n          <SearchField\n            onChangeHandler={this.onSearchInputChangeHandler}\n            value={this.props.search.query}\n          />\n          <Pagination\n            pagination={this.props.pagination}\n            onClickHandler={this.onPageClickHandler}\n            onChangeNadler={this.onPaginationSelectChangeHandler}\n            value={this.props.pagination.itemsPerPage}\n          />\n        </div>\n        <Table shows={shows} />\n      </React.Fragment>\n    );\n    if (loading || shows === null) {\n      content = <Spinner />;\n    }\n\n    return <div>{content}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  shows: state.shows,\n  pagination: state.pagination,\n  sorting: state.sorting,\n  search: state.search\n});\n\nSorting.propTypes = {\n  pagination: PropTypes.object.isRequired,\n  shows: PropTypes.object.isRequired,\n  sorting: PropTypes.object.isRequired,\n  search: PropTypes.object.isRequired,\n  fetchShows: PropTypes.func.isRequired,\n  setCurrentPage: PropTypes.func.isRequired,\n  setCurrentLimit: PropTypes.func.isRequired,\n  setSortingFilters: PropTypes.func.isRequired,\n  setSearchQuery: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchShows,\n    setCurrentPage,\n    setCurrentLimit,\n    setSortingFilters,\n    setSearchQuery\n  }\n)(Sorting);\n","import {\n  GET_AMOUNT_OF_PAGES,\n  SET_CURRENT_PAGE,\n  SET_CURRENT_LIMIT\n} from \"./actionTypes\";\n\nexport const getAmountOfPages = pagesAmount => {\n  return {\n    type: GET_AMOUNT_OF_PAGES,\n    pagesAmount: +pagesAmount\n  };\n};\n\nexport const setCurrentPage = page => {\n  return {\n    type: SET_CURRENT_PAGE,\n    page: +page\n  };\n};\n\nexport const setCurrentLimit = limit => {\n  return {\n    type: SET_CURRENT_LIMIT,\n    limit: +limit\n  };\n};\n","import { SET_SORTING_FILTERS } from \"./actionTypes\";\n\nexport const setSortingFilters = (name, value) => {\n  return {\n    type: SET_SORTING_FILTERS,\n    name,\n    value\n  };\n};\n"],"sourceRoot":""}